{
  "configs": [
    {
      "actions": "*",
      "methods": "read",
      "pattern": "info/*",
      "roles": "*"
    },
    {
      "actions": "login,logout",
      "methods": "read,action",
      "pattern": "authentication",
      "roles": "*"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/themeconfig",
      "roles": "*"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/themerealm",
      "roles": "*"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/uilocale/*",
      "roles": "*"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/fieldPolicy/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "info/uiconfig",
      "roles": "*"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/dashboard",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "query",
      "pattern": "info/features",
      "roles": "*"
    },
    {
      "actions": "listPrivileges",
      "methods": "action",
      "pattern": "privilege",
      "roles": "*"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "privilege/*",
      "roles": "*"
    },
    {
      "actions": "validate",
      "methods": "action",
      "pattern": "util/validateQueryFilter",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "customAuthz": "checkIfAnyFeatureEnabled('kba')",
      "methods": "read",
      "pattern": "selfservice/kba",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "schema/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "action,query",
      "pattern": "consent",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "excludePatterns": "repo,repo/*,file/iwa/*",
      "methods": "*",
      "pattern": "*",
      "roles": "internal/role/openidm-admin"
    },
    {
      "actions": "",
      "methods": "create,read,update,delete,patch,query",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin"
    },
    {
      "actions": "*",
      "methods": "script",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin"
    },
    {
      "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
      "methods": "action",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin"
    },
    {
      "actions": "*",
      "customAuthz": "disallowCommandAction()",
      "methods": "*",
      "pattern": "repo",
      "roles": "internal/role/openidm-admin"
    },
    {
      "actions": "*",
      "customAuthz": "disallowCommandAction()",
      "methods": "*",
      "pattern": "repo/*",
      "roles": "internal/role/openidm-admin"
    },
    {
      "actions": "command",
      "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
      "methods": "action",
      "pattern": "repo/link",
      "roles": "internal/role/openidm-admin"
    },
    {
      "methods": "create,read,query,patch",
      "pattern": "managed/*",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "methods": "read,query",
      "pattern": "internal/role/*",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "actions": "*",
      "methods": "create,read,action,update",
      "pattern": "profile/*",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "actions": "*",
      "methods": "read,action",
      "pattern": "policy/*",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "methods": "read",
      "pattern": "schema/*",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "actions": "*",
      "methods": "action,query",
      "pattern": "consent",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "methods": "read",
      "pattern": "selfservice/kba",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "methods": "read",
      "pattern": "selfservice/terms",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "methods": "read",
      "pattern": "identityProviders",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "actions": "sendTemplate",
      "methods": "action",
      "pattern": "external/email",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "actions": "authenticate",
      "methods": "action",
      "pattern": "system/*",
      "roles": "internal/role/platform-provisioning"
    },
    {
      "actions": "*",
      "methods": "read,action",
      "pattern": "policy/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "bind,unbind",
      "customAuthz": "ownDataOnly()",
      "methods": "read,action,delete",
      "pattern": "*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
      "methods": "update,patch,action",
      "pattern": "*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "patch",
      "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
      "methods": "patch,action",
      "pattern": "selfservice/user/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "endpoint/getprocessesforuser",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "methods": "query",
      "pattern": "endpoint/gettasksview",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "complete",
      "customAuthz": "isMyTask()",
      "methods": "action",
      "pattern": "workflow/taskinstance/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "customAuthz": "canUpdateTask()",
      "methods": "read,update",
      "pattern": "workflow/taskinstance/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "customAuthz": "isAllowedToStartProcess()",
      "methods": "create",
      "pattern": "workflow/processinstance",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "read",
      "customAuthz": "isOneOfMyWorkflows()",
      "methods": "*",
      "pattern": "workflow/processdefinition/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "patch",
      "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
      "methods": "patch,action",
      "pattern": "managed/user",
      "roles": "internal/role/openidm-cert"
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationship()",
      "methods": "read",
      "pattern": "internal/usermeta/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationship()",
      "methods": "read,delete",
      "pattern": "internal/notification/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/user/*",
      "roles": "internal/role/openidm-authorized"
    },
    {
      "actions": "deleteNotificationsForTarget",
      "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
      "methods": "action",
      "pattern": "notification",
      "roles": "internal/role/openidm-authorized"
    }
  ]
}