{
  "metadata" : {
    "realm": "/",
    "entityType" : "sunIdentityRepositoryService",
    "entityId" : "default/Things",
    "uid" : "ou=Things,ou=default,ou=OrganizationConfig,ou=1.0,ou=sunIdentityRepositoryService,ou=services,ou=am-config",
    "sunServiceID" : "&{am.stores.user.type}",
    "objectClass" : [
      "top",
      "sunServiceComponent"
    ],
    "pathParams" : { },
    "ou" : [
      "Things"
    ]
  },
  "data" : {
    "pluginconfig" : {
      "sunIdRepoClass" : "org.forgerock.openam.idrepo.ldap.DJLDAPv3Repo",
      "sunIdRepoSupportedOperations" : [
        "oauthclient=read,create,edit,delete",
        "thing=read,create,edit,delete"
      ],
      "sunIdRepoAttributeMapping" : [
        "com.forgerock.openam.oauth2provider.clientType=clientType",
        "com.forgerock.openam.oauth2provider.loopback.interface.redirection=loopbackInterfaceRedirection",
        "com.forgerock.openam.oauth2provider.redirectionURIs=redirectionUris",
        "com.forgerock.openam.oauth2provider.claimsRedirectionURIs=claimsRedirectionUris",
        "com.forgerock.openam.oauth2provider.scopes=scopes",
        "com.forgerock.openam.oauth2provider.claims=claims",
        "com.forgerock.openam.oauth2provider.defaultScopes=defaultScopes",
        "com.forgerock.openam.oauth2provider.name=name",
        "com.forgerock.openam.oauth2provider.description=descriptions",
        "com.forgerock.openam.oauth2provider.clientName=clientName",
        "com.forgerock.openam.oauth2provider.tosURI=tosURI",
        "com.forgerock.openam.oauth2provider.responseTypes=responseTypes",
        "com.forgerock.openam.oauth2provider.contacts=contacts",
        "com.forgerock.openam.oauth2provider.tokenEndPointAuthMethod=tokenEndpointAuthMethod",
        "com.forgerock.openam.oauth2provider.sectorIdentifierURI=sectorIdentifierUri",
        "com.forgerock.openam.oauth2provider.subjectType=subjectType",
        "com.forgerock.openam.oauth2provider.idTokenSignedResponseAlg=idTokenSignedResponseAlg",
        "com.forgerock.openam.oauth2provider.defaultMaxAge=defaultMaxAge",
        "com.forgerock.openam.oauth2provider.defaultMaxAgeEnabled=defaultMaxAgeEnabled",
        "com.forgerock.openam.oauth2provider.postLogoutRedirectURI=postLogoutRedirectUri",
        "com.forgerock.openam.oauth2provider.accessToken=updateAccessToken",
        "com.forgerock.openam.oauth2provider.clientSessionURI=clientSessionUri",
        "sunIdentityServerDeviceStatus=status",
        "com.forgerock.openam.oauth2provider.publicKeyLocation=publicKeyLocation",
        "com.forgerock.openam.oauth2provider.jwksURI=jwksUri",
        "com.forgerock.openam.oauth2provider.jwksCacheTimeout=jwksCacheTimeout",
        "com.forgerock.openam.oauth2provider.jwkStoreCacheMissCacheTime=jwkStoreCacheMissCacheTime",
        "com.forgerock.openam.oauth2provider.tokenEndpointAuthSigningAlgorithm=tokenEndpointAuthSigningAlgorithm",
        "com.forgerock.openam.oauth2provider.jwks=jwkSet",
        "com.forgerock.openam.oauth2provider.clientJwtPublicKey=clientJwtPublicKey",
        "com.forgerock.openam.oauth2provider.tlsTrustedCert=mTLSTrustedCert",
        "com.forgerock.openam.oauth2provider.subjectDn=mTLSSubjectDN",
        "com.forgerock.openam.oauth2provider.useCertificateBoundAccessTokens=mTLSCertificateBoundAccessTokens",
        "com.forgerock.openam.oauth2provider.authorizationCodeLifeTime=authorizationCodeLifetime",
        "com.forgerock.openam.oauth2provider.refreshTokenLifeTime=refreshTokenLifetime",
        "com.forgerock.openam.oauth2provider.accessTokenLifeTime=accessTokenLifetime",
        "com.forgerock.openam.oauth2provider.authLevel=tokenExchangeAuthLevel",
        "com.forgerock.openam.oauth2provider.jwtTokenLifeTime=jwtTokenLifetime",
        "com.forgerock.openam.oauth2provider.userinfo.signedResponseAlg=userinfoSignedResponseAlg",
        "com.forgerock.openam.oauth2provider.userinfo.encryptedResponseAlg=userinfoEncryptedResponseAlg",
        "com.forgerock.openam.oauth2provider.userinfo.encryptedResponseEnc=userinfoEncryptedResponseEncryptionAlgorithm",
        "com.forgerock.openam.oauth2provider.userinfo.responseFormat=userinfoResponseFormat",
        "com.forgerock.openam.oauth2provider.oauth.mixUpMitigationEnabled=mixUpMitigation",
        "com.forgerock.openam.oauth2provider.requestObjectSigningAlg=requestParameterSignedAlg",
        "com.forgerock.openam.oauth2provider.requestObjectEncryptionAlg=requestParameterEncryptedAlg",
        "com.forgerock.openam.oauth2provider.requestObjectEncryptionEnc=requestParameterEncryptedEncryptionAlgorithm",
        "com.forgerock.openam.oauth2provider.tokenintrospection.responseFormat=tokenIntrospectionResponseFormat",
        "com.forgerock.openam.oauth2provider.tokenintrospection.signedResponseAlg=tokenIntrospectionSignedResponseAlg",
        "com.forgerock.openam.oauth2provider.tokenintrospection.encryptedResponseAlg=tokenIntrospectionEncryptedResponseAlg",
        "com.forgerock.openam.oauth2provider.tokenintrospection.encryptedResponseEnc=tokenIntrospectionEncryptedResponseEncryptionAlgorithm",
        "com.forgerock.openam.oauth2provider.requestURIs=requestUris",
        "com.forgerock.openam.oauth2provider.grantTypes=grantTypes",
        "oauth2ClientCustomProperties=customProperties",
        "com.forgerock.openam.oauth2provider.softwareIdentity=softwareIdentity",
        "com.forgerock.openam.oauth2provider.softwareVersion=softwareVersion"
      ]
    },
    "ldapsettings" : {
      "sun-idrepo-ldapv3-config-connection_pool_min_size" : 4,
      "sun-idrepo-ldapv3-config-connection_pool_max_size" : 14,
      "openam-idrepo-ldapv3-behera-support-enabled" : true,
      "sun-idrepo-ldapv3-config-authid" : "&{am.stores.user.username}",
      "openam-idrepo-ldapv3-heartbeat-interval" : 10,
      "openam-idrepo-ldapv3-proxied-auth-enabled" : false,
      "sun-idrepo-ldapv3-config-ldap-server" : {
        "$list" : "&{am.stores.user.servers}"
      },
      "openam-idrepo-ldapv3-affinity-enabled" : false,
      "openam-idrepo-ldapv3-heartbeat-timeunit" : "SECONDS",
      "sun-idrepo-ldapv3-config-organization_name": "ou=identities",
      "openam-idrepo-ldapv3-proxied-auth-denied-fallback" : false,
      "openam-idrepo-ldapv3-contains-iot-identities-enriched-as-oauth2client" : false,
      "sun-idrepo-ldapv3-config-max-result" : 1000,
      "sun-idrepo-ldapv3-config-connection-mode" : "&{am.stores.user.connection.mode}",
      "sun-idrepo-ldapv3-config-search-scope" : "SCOPE_SUB",
      "sun-idrepo-ldapv3-config-time-limit" : 10,
      "sun-idrepo-ldapv3-config-authpw" : "&{am.stores.user.password}"
    },
    "groupconfig" : {
      "sun-idrepo-ldapv3-config-groups-search-attribute" : "cn",
      "sun-idrepo-ldapv3-config-uniquemember" : "uniqueMember",
      "sun-idrepo-ldapv3-config-groups-search-filter" : "(objectclass=groupOfUniqueNames)",
      "sun-idrepo-ldapv3-config-memberurl" : "memberUrl",
      "sun-idrepo-ldapv3-config-group-container-value" : "groups",
      "sun-idrepo-ldapv3-config-group-attributes" : [
        "dn",
        "cn",
        "uniqueMember",
        "objectclass"
      ],
      "sun-idrepo-ldapv3-config-group-container-name" : "ou",
      "sun-idrepo-ldapv3-config-group-objectclass" : [
        "top",
        "groupofuniquenames"
      ]
    },
    "userconfig" : {
      "sun-idrepo-ldapv3-config-auth-kba-attempts-attr" : [
        "kbaInfoAttempts"
      ],
      "sun-idrepo-ldapv3-config-user-objectclass" : [
        "iplanet-am-managed-person",
        "inetuser",
        "sunFMSAML2NameIdentifier",
        "inetorgperson",
        "devicePrintProfilesContainer",
        "deviceProfilesContainer",
        "pushDeviceProfilesContainer",
        "iPlanetPreferences",
        "iplanet-am-user-service",
        "forgerock-am-dashboard-service",
        "organizationalperson",
        "top",
        "kbaInfoContainer",
        "oathDeviceProfilesContainer",
        "person",
        "webauthnDeviceProfilesContainer",
        "sunAMAuthAccountLockout",
        "iplanet-am-auth-configuration-service",
        "fr-idm-managed-user-explicit",
        "fr-iot"
      ],
      "sun-idrepo-ldapv3-config-active" : "Active",
      "sun-idrepo-ldapv3-config-people-container-name" : "ou",
      "sun-idrepo-ldapv3-config-user-attributes" : [
        "fr-idm-uuid",
        "iplanet-am-auth-configuration",
        "iplanet-am-user-alias-list",
        "iplanet-am-user-password-reset-question-answer",
        "mail",
        "assignedDashboard",
        "authorityRevocationList",
        "dn",
        "iplanet-am-user-password-reset-options",
        "employeeNumber",
        "createTimestamp",
        "kbaActiveIndex",
        "caCertificate",
        "iplanet-am-session-quota-limit",
        "iplanet-am-user-auth-config",
        "sun-fm-saml2-nameid-infokey",
        "sunIdentityMSISDNNumber",
        "iplanet-am-user-password-reset-force-reset",
        "sunAMAuthInvalidAttemptsData",
        "devicePrintProfiles",
        "givenName",
        "iplanet-am-session-get-valid-sessions",
        "objectClass",
        "adminRole",
        "inetUserHttpURL",
        "lastEmailSent",
        "iplanet-am-user-account-life",
        "postalAddress",
        "userCertificate",
        "preferredtimezone",
        "iplanet-am-user-admin-start-dn",
        "oath2faEnabled",
        "preferredlanguage",
        "etag",
        "sun-fm-saml2-nameid-info",
        "userPassword",
        "iplanet-am-session-service-status",
        "telephoneNumber",
        "iplanet-am-session-max-idle-time",
        "distinguishedName",
        "iplanet-am-session-destroy-sessions",
        "kbaInfoAttempts",
        "modifyTimestamp",
        "uid",
        "iplanet-am-user-success-url",
        "iplanet-am-user-auth-modules",
        "kbaInfo",
        "memberOf",
        "sn",
        "preferredLocale",
        "manager",
        "iplanet-am-session-max-session-time",
        "deviceProfiles",
        "cn",
        "oathDeviceProfiles",
        "webauthnDeviceProfiles",
        "iplanet-am-user-login-status",
        "pushDeviceProfiles",
        "push2faEnabled",
        "inetUserStatus",
        "retryLimitNodeCount",
        "iplanet-am-user-failure-url",
        "iplanet-am-session-max-caching-time",
        "thingType",
        "thingKeys",
        "thingOAuth2ClientName",
        "thingConfig",
        "thingProperties"
      ],
      "sun-idrepo-ldapv3-config-auth-kba-attr" : [
        "kbaInfo"
      ],
      "sun-idrepo-ldapv3-config-createuser-attr-mapping" : [
        "cn",
        "sn"
      ],
      "sun-idrepo-ldapv3-config-isactive" : "inetUserStatus",
      "sun-idrepo-ldapv3-config-users-search-attribute" : "fr-idm-uuid",
      "sun-idrepo-ldapv3-config-auth-kba-index-attr" : "kbaActiveIndex",
      "sun-idrepo-ldapv3-config-users-search-filter" : "(objectclass=inetorgperson)",
      "sun-idrepo-ldapv3-config-inactive" : "Inactive",
      "sun-idrepo-ldapv3-config-people-container-value" : "people"
    },
    "cachecontrol" : {
      "sun-idrepo-ldapv3-dncache-enabled" : true,
      "sun-idrepo-ldapv3-dncache-size" : 1500
    },
    "_type" : {
      "_id" : "sunIdentityRepositoryService",
      "name" : "sunIdentityRepositoryService",
      "collection" : false
    },
    "errorhandling" : {
      "com.iplanet.am.ldap.connection.delay.between.retries" : 1000
    },
    "_id" : "default/OpenDJ",
    "persistentsearch" : {
      "sun-idrepo-ldapv3-config-psearchbase": "ou=identities",
      "sun-idrepo-ldapv3-config-psearch-scope" : "SCOPE_SUB",
      "sun-idrepo-ldapv3-config-psearch-filter" : "(!(objectclass=frCoreToken))"
    },
    "authentication" : {
      "sun-idrepo-ldapv3-config-auth-naming-attr" : "uid"
    }
  }
}
