{
  "metadata": {
    "realm": "/",
    "entityType": "sunIdentityRepositoryService",
    "entityId": "default/Things",
    "uid": "ou=Things,ou=default,ou=OrganizationConfig,ou=1.0,ou=sunIdentityRepositoryService,ou=services,ou=am-config",
    "sunServiceID": "&{am.stores.user.type}",
    "objectClass": [
      "top",
      "sunServiceComponent"
    ],
    "pathParams": {},
    "ou": [
      "Things"
    ]
  },
  "data": {
    "pluginconfig": {
      "sunIdRepoClass": "org.forgerock.openam.idrepo.ldap.DJLDAPv3Repo",
      "sunIdRepoSupportedOperations": [
        "thing=read,create,edit,delete"
      ],
      "sunIdRepoAttributeMapping": [
        "agentgroup=oauth-client-agentgroup",
        "com.forgerock.openam.oauth2provider.clientType=oauth-client-clientType",
        "com.forgerock.openam.oauth2provider.loopback.interface.redirection=oauth-client-loopbackInterfaceRedirection",
        "com.forgerock.openam.oauth2provider.redirectionURIs=oauth-client-redirectionUris",
        "com.forgerock.openam.oauth2provider.claimsRedirectionURIs=oauth-client-claimsRedirectionUris",
        "com.forgerock.openam.oauth2provider.scopes=oauth-client-scopes",
        "com.forgerock.openam.oauth2provider.claims=oauth-client-claims",
        "com.forgerock.openam.oauth2provider.defaultScopes=oauth-client-defaultScopes",
        "com.forgerock.openam.oauth2provider.name=oauth-client-name",
        "com.forgerock.openam.oauth2provider.description=oauth-client-descriptions",
        "com.forgerock.openam.oauth2provider.clientName=oauth-client-clientName",
        "clientUri=oauth-client-clientUri",
        "logoUri=oauth-client-logoUri",
        "policyUri=oauth-client-policyUri",
        "com.forgerock.openam.oauth2provider.tosURI=oauth-client-tosURI",
        "com.forgerock.openam.oauth2provider.responseTypes=oauth-client-responseTypes",
        "com.forgerock.openam.oauth2provider.contacts=oauth-client-contacts",
        "com.forgerock.openam.oauth2provider.tokenEndPointAuthMethod=oauth-client-tokenEndpointAuthMethod",
        "com.forgerock.openam.oauth2provider.sectorIdentifierURI=oauth-client-sectorIdentifierUri",
        "com.forgerock.openam.oauth2provider.subjectType=oauth-client-subjectType",
        "authorizationResponseSigningAlgorithm=oauth-client-authorizationResponseSigningAlgorithm",
        "authorizationResponseEncryptionAlgorithm=oauth-client-authorizationResponseEncryptionAlgorithm",
        "authorizationResponseEncryptionMethod=oauth-client-authorizationResponseEncryptionMethod",
        "com.forgerock.openam.oauth2provider.idTokenSignedResponseAlg=oauth-client-idTokenSignedResponseAlg",
        "idTokenEncryptionEnabled=oauth-client-idTokenEncryptionEnabled",
        "idTokenEncryptionAlgorithm=oauth-client-idTokenEncryptionAlgorithm",
        "idTokenEncryptionMethod=oauth-client-idTokenEncryptionMethod",
        "idTokenPublicEncryptionKey=oauth-client-idTokenPublicEncryptionKey",
        "com.forgerock.openam.oauth2provider.defaultMaxAge=oauth-client-defaultMaxAge",
        "com.forgerock.openam.oauth2provider.defaultMaxAgeEnabled=oauth-client-defaultMaxAgeEnabled",
        "defaultAcrValues=oauth-client-defaultAcrValues",
        "com.forgerock.openam.oauth2provider.postLogoutRedirectURI=oauth-client-postLogoutRedirectUri",
        "com.forgerock.openam.oauth2provider.accessToken=oauth-client-updateAccessToken",
        "com.forgerock.openam.oauth2provider.clientSessionURI=oauth-client-clientSessionUri",
        "sunIdentityServerDeviceStatus=oauth-client-status",
        "com.forgerock.openam.oauth2provider.publicKeyLocation=oauth-client-publicKeyLocation",
        "com.forgerock.openam.oauth2provider.jwksURI=oauth-client-jwksUri",
        "com.forgerock.openam.oauth2provider.jwksCacheTimeout=oauth-client-jwksCacheTimeout",
        "com.forgerock.openam.oauth2provider.jwkStoreCacheMissCacheTime=oauth-client-jwkStoreCacheMissCacheTime",
        "com.forgerock.openam.oauth2provider.tokenEndpointAuthSigningAlgorithm=oauth-client-tokenEndpointAuthSigningAlgorithm",
        "com.forgerock.openam.oauth2provider.jwks=oauth-client-jwkSet",
        "com.forgerock.openam.oauth2provider.clientJwtPublicKey=oauth-client-clientJwtPublicKey",
        "com.forgerock.openam.oauth2provider.tlsTrustedCert=oauth-client-mTLSTrustedCert",
        "com.forgerock.openam.oauth2provider.subjectDn=oauth-client-mTLSSubjectDN",
        "com.forgerock.openam.oauth2provider.useCertificateBoundAccessTokens=oauth-client-mTLSCertificateBoundAccessTokens",
        "com.forgerock.openam.oauth2provider.authorizationCodeLifeTime=oauth-client-authorizationCodeLifetime",
        "com.forgerock.openam.oauth2provider.refreshTokenLifeTime=oauth-client-refreshTokenLifetime",
        "com.forgerock.openam.oauth2provider.accessTokenLifeTime=oauth-client-accessTokenLifetime",
        "com.forgerock.openam.oauth2provider.authLevel=oauth-client-tokenExchangeAuthLevel",
        "com.forgerock.openam.oauth2provider.jwtTokenLifeTime=oauth-client-jwtTokenLifetime",
        "refreshTokenGracePeriod=oauth-client-refreshTokenGracePeriod",
        "GracePeriodValidator=oauth-client-GracePeriodValidator",
        "isConsentImplied=oauth-client-isConsentImplied",
        "com.forgerock.openam.oauth2provider.userinfo.signedResponseAlg=oauth-client-userinfoSignedResponseAlg",
        "com.forgerock.openam.oauth2provider.userinfo.encryptedResponseAlg=oauth-client-userinfoEncryptedResponseAlg",
        "com.forgerock.openam.oauth2provider.userinfo.encryptedResponseEnc=oauth-client-userinfoEncryptedResponseEncryptionAlgorithm",
        "com.forgerock.openam.oauth2provider.userinfo.responseFormat=oauth-client-userinfoResponseFormat",
        "com.forgerock.openam.oauth2provider.oauth.mixUpMitigationEnabled=oauth-client-mixUpMitigation",
        "RequiredValueValidator=oauth-client-RequiredValueValidator",
        "com.forgerock.openam.oauth2provider.requestObjectSigningAlg=oauth-client-requestParameterSignedAlg",
        "com.forgerock.openam.oauth2provider.requestObjectEncryptionAlg=oauth-client-requestParameterEncryptedAlg",
        "com.forgerock.openam.oauth2provider.requestObjectEncryptionEnc=oauth-client-requestParameterEncryptedEncryptionAlgorithm",
        "com.forgerock.openam.oauth2provider.tokenintrospection.responseFormat=oauth-client-tokenIntrospectionResponseFormat",
        "com.forgerock.openam.oauth2provider.tokenintrospection.signedResponseAlg=oauth-client-tokenIntrospectionSignedResponseAlg",
        "com.forgerock.openam.oauth2provider.tokenintrospection.encryptedResponseAlg=oauth-client-tokenIntrospectionEncryptedResponseAlg",
        "com.forgerock.openam.oauth2provider.tokenintrospection.encryptedResponseEnc=oauth-client-tokenIntrospectionEncryptedResponseEncryptionAlgorithm",
        "javascriptOrigins=oauth-client-javascriptOrigins",
        "com.forgerock.openam.oauth2provider.requestURIs=oauth-client-requestUris",
        "com.forgerock.openam.oauth2provider.grantTypes=oauth-client-grantTypes",
        "RedirectUriValidator=oauth-client-RedirectUriValidator",
        "oauth2ClientCustomProperties=oauth-client-customProperties",
        "URLValidator=oauth-client-URLValidator",
        "backchannel_logout_uri=oauth-client-backchannel-logout-uri",
        "backchannel_logout_session_required=oauth-client-backchannel-logout-session-required",
        "com.forgerock.openam.oauth2provider.softwareIdentity=oauth-client-softwareIdentity",
        "com.forgerock.openam.oauth2provider.softwareVersion=oauth-client-softwareVersion",
        "require_pushed_authorization_requests=oauth-client-require-pushed-authorization-requests",
        "providerOverridesEnabled=oauth-client-providerOverridesEnabled",
        "issueRefreshToken=oauth-client-issueRefreshToken",
        "issueRefreshTokenOnRefreshedToken=oauth-client-issueRefreshTokenOnRefreshedToken",
        "usePolicyEngineForScope=oauth-client-usePolicyEngineForScope",
        "scopesPolicySet=oauth-client-scopesPolicySet",
        "accessTokenModificationPluginType=oauth-client-accessTokenModificationPluginType",
        "accessTokenModificationScript=oauth-client-accessTokenModificationScript",
        "accessTokenModifierClass=oauth-client-accessTokenModifierClass",
        "accessTokenMayActScript=oauth-client-accessTokenMayActScript",
        "oidcMayActScript=oauth-client-oidcMayActScript",
        "oidcClaimsPluginType=oauth-client-oidcClaimsPluginType",
        "oidcClaimsScript=oauth-client-oidcClaimsScript",
        "oidcClaimsClass=oauth-client-oidcClaimsClass",
        "customLoginUrlTemplate=oauth-client-customLoginUrlTemplate",
        "statelessTokensEnabled=oauth-client-statelessTokensEnabled",
        "tokenEncryptionEnabled=oauth-client-tokenEncryptionEnabled",
        "clientsCanSkipConsent=oauth-client-clientsCanSkipConsent",
        "enableRemoteConsent=oauth-client-enableRemoteConsent",
        "remoteConsentServiceId=oauth-client-remoteConsentServiceId",
        "evaluateScopePluginType=oauth-client-evaluateScopePluginType",
        "evaluateScopeScript=oauth-client-evaluateScopeScript",
        "evaluateScopeClass=oauth-client-evaluateScopeClass",
        "validateScopePluginType=oauth-client-validateScopePluginType",
        "validateScopeScript=oauth-client-validateScopeScript",
        "validateScopeClass=oauth-client-validateScopeClass",
        "authorizeEndpointDataProviderPluginType=oauth-client-authorizeEndpointDataProviderPluginType",
        "authorizeEndpointDataProviderScript=oauth-client-authorizeEndpointDataProviderScript",
        "authorizeEndpointDataProviderClass=oauth-client-authorizeEndpointDataProviderClass",
        "overrideableOIDCClaims=oauth-client-overrideableOIDCClaims"
      ]
    },
    "ldapsettings": {
      "sun-idrepo-ldapv3-config-connection_pool_min_size": 4,
      "sun-idrepo-ldapv3-config-connection_pool_max_size": 14,
      "openam-idrepo-ldapv3-behera-support-enabled": true,
      "sun-idrepo-ldapv3-config-authid": "&{am.stores.user.username}",
      "openam-idrepo-ldapv3-heartbeat-interval": 10,
      "openam-idrepo-ldapv3-proxied-auth-enabled": false,
      "sun-idrepo-ldapv3-config-ldap-server": {
        "$list": "&{am.stores.user.servers}"
      },
      "openam-idrepo-ldapv3-affinity-enabled": false,
      "openam-idrepo-ldapv3-heartbeat-timeunit": "SECONDS",
      "sun-idrepo-ldapv3-config-organization_name": "ou=identities",
      "openam-idrepo-ldapv3-proxied-auth-denied-fallback": false,
      "openam-idrepo-ldapv3-contains-iot-identities-enriched-as-oauth2client": false,
      "sun-idrepo-ldapv3-config-max-result": 1000,
      "sun-idrepo-ldapv3-config-connection-mode": "&{am.stores.user.connection.mode}",
      "sun-idrepo-ldapv3-config-search-scope": "SCOPE_SUB",
      "sun-idrepo-ldapv3-config-time-limit": 10,
      "sun-idrepo-ldapv3-config-authpw": "&{am.stores.user.password}"
    },
    "groupconfig": {
      "sun-idrepo-ldapv3-config-groups-search-attribute": "cn",
      "sun-idrepo-ldapv3-config-uniquemember": "uniqueMember",
      "sun-idrepo-ldapv3-config-groups-search-filter": "(objectclass=groupOfUniqueNames)",
      "sun-idrepo-ldapv3-config-memberurl": "memberUrl",
      "sun-idrepo-ldapv3-config-group-container-value": "groups",
      "sun-idrepo-ldapv3-config-group-attributes": [
        "dn",
        "cn",
        "uniqueMember",
        "objectclass"
      ],
      "sun-idrepo-ldapv3-config-group-container-name": "ou",
      "sun-idrepo-ldapv3-config-group-objectclass": [
        "top",
        "groupofuniquenames"
      ]
    },
    "userconfig": {
      "sun-idrepo-ldapv3-config-auth-kba-attempts-attr": [
        "kbaInfoAttempts"
      ],
      "sun-idrepo-ldapv3-config-user-objectclass": [
        "iplanet-am-managed-person",
        "inetuser",
        "sunFMSAML2NameIdentifier",
        "inetorgperson",
        "devicePrintProfilesContainer",
        "deviceProfilesContainer",
        "pushDeviceProfilesContainer",
        "iPlanetPreferences",
        "iplanet-am-user-service",
        "forgerock-am-dashboard-service",
        "organizationalperson",
        "top",
        "kbaInfoContainer",
        "oathDeviceProfilesContainer",
        "person",
        "webauthnDeviceProfilesContainer",
        "sunAMAuthAccountLockout",
        "iplanet-am-auth-configuration-service",
        "fr-idm-managed-user-explicit",
        "fr-iot"
      ],
      "sun-idrepo-ldapv3-config-active": "Active",
      "sun-idrepo-ldapv3-config-people-container-name": "ou",
      "sun-idrepo-ldapv3-config-user-attributes": [
        "fr-idm-uuid",
        "iplanet-am-auth-configuration",
        "iplanet-am-user-alias-list",
        "iplanet-am-user-password-reset-question-answer",
        "mail",
        "assignedDashboard",
        "authorityRevocationList",
        "dn",
        "iplanet-am-user-password-reset-options",
        "employeeNumber",
        "createTimestamp",
        "kbaActiveIndex",
        "caCertificate",
        "iplanet-am-session-quota-limit",
        "iplanet-am-user-auth-config",
        "sun-fm-saml2-nameid-infokey",
        "sunIdentityMSISDNNumber",
        "iplanet-am-user-password-reset-force-reset",
        "sunAMAuthInvalidAttemptsData",
        "devicePrintProfiles",
        "givenName",
        "iplanet-am-session-get-valid-sessions",
        "objectClass",
        "adminRole",
        "inetUserHttpURL",
        "lastEmailSent",
        "iplanet-am-user-account-life",
        "postalAddress",
        "userCertificate",
        "preferredtimezone",
        "iplanet-am-user-admin-start-dn",
        "oath2faEnabled",
        "preferredlanguage",
        "etag",
        "sun-fm-saml2-nameid-info",
        "userPassword",
        "iplanet-am-session-service-status",
        "telephoneNumber",
        "iplanet-am-session-max-idle-time",
        "distinguishedName",
        "iplanet-am-session-destroy-sessions",
        "kbaInfoAttempts",
        "modifyTimestamp",
        "uid",
        "iplanet-am-user-success-url",
        "iplanet-am-user-auth-modules",
        "kbaInfo",
        "memberOf",
        "sn",
        "preferredLocale",
        "manager",
        "iplanet-am-session-max-session-time",
        "deviceProfiles",
        "cn",
        "oathDeviceProfiles",
        "webauthnDeviceProfiles",
        "iplanet-am-user-login-status",
        "pushDeviceProfiles",
        "push2faEnabled",
        "inetUserStatus",
        "retryLimitNodeCount",
        "iplanet-am-user-failure-url",
        "iplanet-am-session-max-caching-time",
        "thingType",
        "thingKeys",
        "thingOAuth2ClientName",
        "thingConfig",
        "thingProperties"
      ],
      "sun-idrepo-ldapv3-config-auth-kba-attr": [
        "kbaInfo"
      ],
      "sun-idrepo-ldapv3-config-createuser-attr-mapping": [
        "cn",
        "sn"
      ],
      "sun-idrepo-ldapv3-config-isactive": "inetUserStatus",
      "sun-idrepo-ldapv3-config-users-search-attribute": "fr-idm-uuid",
      "sun-idrepo-ldapv3-config-auth-kba-index-attr": "kbaActiveIndex",
      "sun-idrepo-ldapv3-config-users-search-filter": "(objectclass=inetorgperson)",
      "sun-idrepo-ldapv3-config-inactive": "Inactive",
      "sun-idrepo-ldapv3-config-people-container-value": "people"
    },
    "thingconfig": {
      "sun-idrepo-ldapv3-config-thing-attributes": [
        "fr-idm-uuid",
        "oauth-client-responseTypes",
        "oauth-client-evaluateScopePluginType",
        "oauth-client-mTLSSubjectDN",
        "oauth-client-authorizeEndpointDataProviderClass",
        "oauth-client-oidcClaimsClass",
        "oauth-client-accessTokenModificationScript",
        "oauth-client-postLogoutRedirectUri",
        "oauth-client-accessTokenLifetime",
        "oauth-client-tosURI",
        "oauth-client-refreshTokenLifetime",
        "oauth-client-providerOverridesEnabled",
        "oauth-client-oidcMayActScript",
        "oauth-client-scopes",
        "oauth-client-name",
        "oauth-client-accessTokenModifierClass",
        "oauth-client-claims",
        "oauth-client-requestUris",
        "oauth-client-loopbackInterfaceRedirection",
        "oauth-client-clientName",
        "oauth-client-validateScopePluginType",
        "oauth-client-softwareVersion",
        "oauth-client-overrideableOIDCClaims",
        "thingType",
        "oauth-client-publicKeyLocation",
        "oauth-client-idTokenEncryptionAlgorithm",
        "thingConfig",
        "userPassword",
        "oauth-client-accessTokenModificationPluginType",
        "oauth-client-defaultScopes",
        "oauth-client-grantTypes",
        "oauth-client-customProperties",
        "oauth-client-authorizationResponseEncryptionMethod",
        "oauth-client-jwksUri",
        "uid",
        "oauth-client-logoUri",
        "oauth-client-authorizationResponseEncryptionAlgorithm",
        "oauth-client-updateAccessToken",
        "oauth-client-enableRemoteConsent",
        "oauth-client-defaultMaxAgeEnabled",
        "oauth-client-tokenIntrospectionResponseFormat",
        "oauth-client-status",
        "oauth-client-refreshTokenGracePeriod",
        "oauth-client-idTokenEncryptionMethod",
        "oauth-client-mTLSCertificateBoundAccessTokens",
        "oauth-client-requestParameterEncryptedAlg",
        "oauth-client-RedirectUriValidator",
        "thingKeys",
        "oauth-client-userinfoSignedResponseAlg",
        "oauth-client-claimsRedirectionUris",
        "thingOAuth2ClientName",
        "oauth-client-subjectType",
        "oauth-client-defaultAcrValues",
        "oauth-client-idTokenSignedResponseAlg",
        "oauth-client-jwtTokenLifetime",
        "oauth-client-mixUpMitigation",
        "oauth-client-URLValidator",
        "oauth-client-requestParameterEncryptedEncryptionAlgorithm",
        "oauth-client-policyUri",
        "oauth-client-clientType",
        "oauth-client-defaultMaxAge",
        "oauth-client-jwksCacheTimeout",
        "oauth-client-backchannel-logout-uri",
        "oauth-client-userinfoEncryptedResponseEncryptionAlgorithm",
        "oauth-client-authorizeEndpointDataProviderPluginType",
        "oauth-client-evaluateScopeScript",
        "oauth-client-contacts",
        "oauth-client-require-pushed-authorization-requests",
        "oauth-client-tokenEncryptionEnabled",
        "oauth-client-tokenIntrospectionEncryptedResponseAlg",
        "oauth-client-userinfoResponseFormat",
        "oauth-client-validateScopeScript",
        "oauth-client-accessTokenMayActScript",
        "oauth-client-softwareIdentity",
        "oauth-client-clientUri",
        "oauth-client-authorizationCodeLifetime",
        "oauth-client-sectorIdentifierUri",
        "oauth-client-statelessTokensEnabled",
        "oauth-client-tokenEndpointAuthMethod",
        "oauth-client-mTLSTrustedCert",
        "oauth-client-tokenIntrospectionSignedResponseAlg",
        "oauth-client-clientSessionUri",
        "oauth-client-backchannel-logout-session-required",
        "oauth-client-jwkSet",
        "oauth-client-issueRefreshToken",
        "oauth-client-clientsCanSkipConsent",
        "oauth-client-scopesPolicySet",
        "oauth-client-remoteConsentServiceId",
        "oauth-client-oidcClaimsScript",
        "oauth-client-tokenExchangeAuthLevel",
        "oauth-client-javascriptOrigins",
        "oauth-client-RequiredValueValidator",
        "oauth-client-authorizationResponseSigningAlgorithm",
        "oauth-client-usePolicyEngineForScope",
        "oauth-client-agentgroup",
        "oauth-client-clientJwtPublicKey",
        "oauth-client-tokenEndpointAuthSigningAlgorithm",
        "oauth-client-descriptions",
        "oauth-client-isConsentImplied",
        "oauth-client-oidcClaimsPluginType",
        "oauth-client-customLoginUrlTemplate",
        "oauth-client-idTokenPublicEncryptionKey",
        "oauth-client-validateScopeClass",
        "oauth-client-userinfoEncryptedResponseAlg",
        "oauth-client-redirectionUris",
        "oauth-client-idTokenEncryptionEnabled",
        "oauth-client-authorizeEndpointDataProviderScript",
        "oauth-client-tokenIntrospectionEncryptedResponseEncryptionAlgorithm",
        "oauth-client-jwkStoreCacheMissCacheTime",
        "oauth-client-requestParameterSignedAlg",
        "inetUserStatus",
        "oauth-client-issueRefreshTokenOnRefreshedToken",
        "thingProperties",
        "oauth-client-GracePeriodValidator",
        "oauth-client-evaluateScopeClass"
      ],
      "sun-idrepo-ldapv3-config-thing-container-name": "ou",
      "sun-idrepo-ldapv3-config-thing-container-value": "things",
      "sun-idrepo-ldapv3-config-thing-naming-attribute": "fr-idm-uuid",
      "sun-idrepo-ldapv3-config-thing-objectclass": [
        "top",
        "inetuser",
        "fr-iot",
        "fr-idm-managed-user-explicit"
      ],
      "sun-idrepo-ldapv3-config-thing-search-attribute": "fr-idm-uuid",
      "sun-idrepo-ldapv3-config-thing-search-filter": "(objectclass=fr-iot)"
    },
    "cachecontrol": {
      "sun-idrepo-ldapv3-dncache-enabled": true,
      "sun-idrepo-ldapv3-dncache-size": 1500
    },
    "_type": {
      "_id": "sunIdentityRepositoryService",
      "name": "sunIdentityRepositoryService",
      "collection": false
    },
    "errorhandling": {
      "com.iplanet.am.ldap.connection.delay.between.retries": 1000
    },
    "_id": "default/OpenDJ",
    "persistentsearch": {
      "sun-idrepo-ldapv3-config-psearchbase": "ou=identities",
      "sun-idrepo-ldapv3-config-psearch-scope": "SCOPE_SUB",
      "sun-idrepo-ldapv3-config-psearch-filter": "(!(objectclass=frCoreToken))"
    },
    "authentication": {
      "sun-idrepo-ldapv3-config-auth-naming-attr": "fr-idm-uuid"
    }
  }
}
